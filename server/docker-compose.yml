version: "3.9"
services:
  postgres:
    container_name: postgres
    image: postgres:latest
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
    environment:
      POSTGRES_DB: "miss_you_rgb_db"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database/data/:/var/lib/postgresql/data
    ports:
      - ${DB_PORT}:${DB_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d miss_you_rgb_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - server

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_PORT_INNER}
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - ${ZOOKEEPER_PORT_OUTER}:${ZOOKEEPER_PORT_INNER}
    networks:
      - server
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - ${KAFKA_PORT_OUTER}:${KAFKA_PORT_OUTER}
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_PORT_INNER}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:${KAFKA_PORT_INNER},PLAINTEXT_HOST://localhost:${KAFKA_PORT_OUTER}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "Topic1:1:3"
    restart: unless-stopped
    networks:
      - server

  server:
    container_name: miss-you-rgb-server
    image: miss-you-rgb-server:latest
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    restart: unless-stopped
    networks:
      - server

networks:
  server:
    driver: bridge